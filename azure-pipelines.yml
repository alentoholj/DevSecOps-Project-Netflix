# Docker
# Build a Docker image
# https://docs.microsoft.com/azure/devops/pipelines/languages/docker

trigger:
  branches:
    include:
      - "main"
  paths:
    exclude:
      - "README.md"

variables: 

- group: 'TMDB'

stages:
  - stage: Build

    jobs:

      - job: BuildNetflixAPP

        pool: 

          name: carpel-pool

          demands: java

        steps:

          - task: "SonarCloudPrepare@1"
      
            displayName: 'Prepare analysis on SonarCloud'
      
            inputs:
        
              SonarCloud: 'Netflix'
        
              organization: 'alentoholj'
        
              scannerMode: 'CLI'
        
              configMode: manual
        
              cliProjectKey: 'alentoholj_DevSecOps-Project-Netflix'
        
              cliProjectName: 'DevSecOps-Project-Netflix'
          
          - task: Docker@2

            displayName: 'Docker build'

            inputs:
              
              containerRegistry: 'DockerHUB integration' #Created a service connection with Docker
        
              repository: carpel/netflix
        
              command: build
        
              Dockerfile: Dockerfile
        
              tags: latest
        
              arguments: '--build-arg TMDB_V3_API_KEY=$(TMDB_V3_API_KEY) -t netflix'
          
          - task: Docker@2
      
            displayName: 'Docker Push'
        
            inputs:
        
                containerRegistry: 'DockerHUB integration'
        
                repository: carpel/netflix
        
                command: push
        
                tags: latest

          - task: SonarCloudAnalyze@1
        
            displayName: 'Run Code Analysis Sonar'
      
          - task: SonarCloudPublish@1
        
            displayName: 'Publish Quality Gate Result'

          - script: trivy image --exit-code 0 --severity HIGH,CRITICAL carpel/netflix >> $(Build.ArtifactStagingDirectory)/trivyreport.html
          
            displayName: 'Run Trivy to scan Docker image'
          
          - task: PublishBuildArtifacts@1
        
            displayName: 'Publish Artifact: drop'  


  - stage: DeploytoDEV

    displayName: 'Deploy to DEV environment'

    jobs:

      - deployment: 'DeploymentDEV'

        pool: 

          name: carpel-pool

          demands: java
        
        environment: DEV

        strategy: 

          runOnce:

            deploy:
              
              steps:

                - task: AzureRmWebAppDeployment@4

                  displayName: 'Deploy to Dev Web Service'

                  inputs:

                    ConnectionType: 'AzureRM'

                    azureSubscription: 'Azure Sandbox'

                    appType: webAppContainer

                    WebAppName: 'carpel-netflix-dev'

                    DockerNamespace: 'carpel'

                    DockerRepository: netflix